export PATH=$HOME/bin:/opt/homebrew/bin:/usr/local/bin:/opt/homebrew/sbin:/usr/local/sbin:~/.kube/plugins:$PATH
# export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:/usr/local/sbin:$PATH"
export ZSH="/Users/nigel/.oh-my-zsh"
export PAGER=/usr/bin/less

# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"
# ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  compleat
  history-search-multi-word
  macos # adds "tab" alias
  autoupdate
  zsh-syntax-highlighting # *** MUST BE LAST ***
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export HISTSIZE=10000
export HISTFILESIZE=10000
export HISTFILE="$HOME/.history"
export SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt HIST_FIND_NO_DUPS
setopt inc_append_history
setopt share_history
setopt autocd
setopt extendedglob

# Don't share history between shells
unsetopt inc_append_history
unsetopt share_history
setopt rmstarsilent

exportf h() {
  if [ -n "$1" ]; then
    history | grep -i "$@"
  else
    history
  fi
}
alias kt=~/src/coda/scripts/kt.sh
alias kdl=~/src/coda/scripts/kt.sh dev lite
alias debug='node-debug _mocha --no-timeouts --no-preload'
alias klog='~/src/coda/scripts/ops/klog.sh'
alias more='less -R'
alias vi=vim
alias g=git
alias gl='klog < /tmp/log | less -R'
alias killchrome='killall -m -c Google\ Chrome'
alias killcamera='sudo killall AppleCameraAssistant VDCAssistant'

exportf dfd() {
  make dev-full-debug | sed 's/\\\\n/\
    /g'
}

exportf dd() {
  make dev | sed 's/\\\\n/\
    /g'
}

# DEVBOX: run test
exportf rt() {
(
  if [ -f ${1} ]; then
    echo -n Running: $1 with args "${@:2}"
    mocha --opts ./test/mocha.opts "${@:2}" $1
  else
     # find modules -name ${1:-\*}_test.\?s -exec echo -n Running: {} with args "${@:2}" \; -exec mocha -g '' "${@:2}" {} \; 
     PIPENV_PIPFILE=~/src/coda/Pipfile pipenv run python3 -m tools.dacoda.main modules/\*\*/${1:-\*}_test.\?s
  fi
) | sed 's/\\n/\
/g'
}

function rtz() {
	PIPENV_PIPFILE=~/src/coda/Pipfile pipenv run python3 -m tools.dacoda.main $(ls -C modules/**/${1:-*}_test.?s)

}

exportf gif2mkv() {
  if [ -z $2 ]; then
    echo Usage: gif2mkv input.gif output.mkv
  else
    ffmpeg -i $1 -f image2pipe - | ffmpeg -y -f image2pipe -i - $2
    echo Converted $1 to $2
  fi
}

exportf mov2gif() {
  if [ -z $1 ]; then
    echo Usage: mov2giv input
  else
    ffmpeg -y -i "$1" -f image2pipe -vcodec ppm - | convert -delay 2 -loop 0 -layers Optimize - gif:- | gifsicle -d 3 -O3 -o "$1.gif"
  fi  
}

exportf dock-toggle() {
  local prefs=/Users/`whoami`/Library/Preferences/com.apple.dock
  local current_state=`defaults read $prefs autohide`
  local set_state=$((($current_state+1)%2))
  defaults write "$prefs" autohide -integer $set_state && killall -HUP Dock
}

fpath=(~/.zsh $fpath)

function k() {
  kubectl command $@
}
function kadhoc() { 
  kubectl --context adhoc --namespace $@ 
}
function khead() { 
  kubectl --context head --namespace head $@ 
}
function kprod() { 
  kubectl --context prod --namespace prod $@ 
}
function kstaging() { 
  kubectl --context staging --namespace staging $@ 
}
function whiteboard() {
  convert "$1" -morphology Convolve DoG:15,100,0 -negate -normalize -blur 0x1 -channel RBG -level 60%,91%,0.1 "$2"
}
export OKTA_USERNAME=nigel@coda.io
export OP_SESSION_coda_project=MX6yaqLjuetTMhHA1SZPjRZBqR0hh1Fomr_3W-wkMvs
# export CODA_DEV_SERVER_DASHBOARD=1

DEFAULT_USER=nigel@spike

function sethostname() {
	sudo scutil --set HostName $@
	sudo scutil --set LocalHostName $@
	sudo scutil --set ComputerName $@
}

function git-clean-branches() {
	# https://github.com/not-an-aardvark/git-delete-squashed#readme
	git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch\^{tree}) -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done
}
alias viz='vim ~/.zshrc'
alias pra='pm2 restart app-webpack'
alias prw='pm2 restart website-webpack'
alias orcaslte='ssh -fNL 8888:192.168.5.1:80 admin@172.20.16.1 && open http://localhost:8888'
alias speed="iperf3 -c speedtest1-sttlwawb-9.as20055.net"
alias openfilecount="sudo lsof -t | wc -l"
alias devbox="ssh -L 8080:127.0.0.1:8080 -L 8081:127.0.0.1:8081 -L 5850:127.0.0.1:5850 -t devbox-nigel 'tmux -CC new -A -s git'"

# Enable kubectl completion
if command -v kubectl; then
  source <(kubectl completion zsh)
fi

prompt_context() {
  if [[ "$USER" != "$DEFAULT_USER" || -n "$SSH_CLIENT" ]]; then
    prompt_segment black default "%(!.%{%F{yellow}%}.)$USER"
  fi
}

# if [ ! -S "$SSH_AUTH_SOCK" ]; then
  eval $(ssh-agent)
# fi
ssh-add -A 2> /dev/null

# $(brew --prefix)/share/zsh/site-functions/_bazel
$(brew --prefix)/share/zsh/site-functions/_brew

export TF_CLI_ARGS_apply="-parallelism=50"
export TF_CLI_ARGS_plan="-parallelism=50"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

source ~/bin/git-aliases.sh

